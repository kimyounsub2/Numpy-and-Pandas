
1. Numpy_type check - 타입체크
arr = [1,2,3,4]
type(arr)
<ckass 'list'> 리스트 타입으로 출력된다.

ndarr = np.array(1,2,3,4)
type(ndarr)
<class 'numpy.ndarray'> 다차원 타입으로 출력된다.
ndarr.shape
(4,)

2. Numpy_size - 해당 넘파이의 사이즈를 구한다. 모두 2차원이다
arr1 = 
array([[1,2,3],
       [4,5,6]])
arr1.size
= 6 -> 총 6개이니까

arr2
array([[1,2,3,4],
        [5,6,7,8],
        [9,10,11,12]])
arr2.size
= 12

arr3
array([[1,2,3,],
        [5,6,7],
        [10,11,12]])
arr3.size
= 9 

3. Numpy_ndim(1dim,2dim = n은 차원의 숫자를 의미한다.) - 배열의 차원만을 알고자 할때는 ndim , 이때는 size가 별로 도움이 안됨
a = np,array([[1,2,3],[4,5,6]])
a.size = 6 # size로는 차원을 알수가 없음 단순 개수를 의미하니까

a.shape = (2,3) # shape로는 2차원이라는걸 알아볼수는 있다.
ex) a.shape = (2,3,3) 일때 3차원이라는걸 알수 있다.

a.ndim = 2 # ndim은 차원만 출력한다.